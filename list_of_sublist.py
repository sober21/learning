# Подсписок — часть другого списка. Подсписок может содержать один элемент, несколько или даже ни одного.
# Например, [1], [2], [3] и [4] — подсписки списка [1, 2, 3, 4]. Список [2, 3] — подсписок списка [1, 2, 3, 4],
# но список [2, 4] не подсписок списка [1, 2, 3, 4], так как элементы 2 и 4 во втором списке не смежные
# (т.к. они разрываются элементом 3). Пустой список — подсписок любого списка. Сам список — подсписок самого себя,
# то есть список [1, 2, 3, 4] подсписок списка [1, 2, 3, 4].
#
# На вход программе подается строка текста, содержащая символы. Из данной строки формируется список.
# Напишите программу, которая выводит список, содержащий все возможные подсписки списка, включая пустой список.


def list_of_sublist(my_list: list) -> list:
    res_list = [[]]
    for i in range(len(my_list)):
        for j in range(len(my_list) - i):
            res_list.append(my_list[j:j+i+1])
    return res_list


if __name__ == '__main__':
    print(list_of_sublist(['a', 'b', 'v', 'g']))
    assert list_of_sublist(['a', 'b']) == [[], ['a'], ['b'], ['a', 'b']]
    assert list_of_sublist(['a', 'b', 'v']) == [[], ['a'], ['b'], ['v'], ['a', 'b'], ['b', 'v'], ['a', 'b', 'v']]
    assert list_of_sublist(['a']) == [[], ['a']]
    assert list_of_sublist(['1', '2', '3', '0']) == [[], ['1'], ['2'], ['3'], ['0'], ['1', '2'], ['2', '3'], ['3', '0'],
                                             ['1', '2', '3'], ['2', '3', '0'], ['1', '2', '3', '0']]
